{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","keyy","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAwCeA,EAtCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuBJ,OACQ,sBAAMC,SAlBW,SAACC,GAElBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,4BAASA,GAAT,CAAeP,OAMjCC,EAAc,MAMb,SACI,uBACIO,KAAK,OACLC,YAAaT,EAEbU,SAzBc,SAACP,GAAOF,EAAcE,EAAEQ,OAAOC,a,uBCS9CC,EAfF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACFC,EADE,iDAC+CC,UAAUH,GADzD,+DAEWI,MAAOF,GAFlB,cAEFG,EAFE,gBAGeA,EAAKC,OAHpB,uBAGAC,EAHA,EAGAA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATlC,kBAYJM,GAZI,4CAAH,sDCeEO,EAfK,SAAC,GAAmB,IAAjBL,EAAgB,EAAhBA,IAAKM,EAAW,EAAXA,KAIxB,OAFAC,QAAQC,IAAKF,EAAMN,GAIf,cADA,CACA,OAAKS,UAAU,yCAAf,UACI,qBAAKC,IAAKV,EAAIR,IAAKmB,IAAKX,EAAIE,QAC5B,4BAAIF,EAAIE,YC8BLU,EAnCC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAGf,ECLwB,SAAEA,GAE9B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBI,OAlBJC,qBAAU,WACN3B,EAAQC,GACH2B,MAAK,SAAAC,GACEH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,SAG1B,CAAEvB,IAUMwB,EDtB0BK,CAAc7B,GAAlCa,EAAb,EAAQN,KAAagB,EAArB,EAAqBA,QAazB,OACQ,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDnB,IAClDuB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAGQN,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,CACIM,KAAON,EAAIC,GACXD,IAAMA,aEInBoB,EA7BO,WAElB,MAAoC7C,mBAAS,CAAC,KAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ+C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCrBlCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5f6571a.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n \n   \n    const handleInputChange = (e) => {setInputValue(e.target.value);}\n   \n    const handleSubmit = (e) => {\n        // e.preventDefault() --> Cancela el evento si este es cancelable, sin detener el resto del funcionamiento del evento, es decir, puede ser llamado de nuevo.\n        e.preventDefault();\n\n        // .trim(borrar los espacios que tenga delante y detrás)\n        if(inputValue.trim().length > 2){ \n       setCategories(cats => [ ...cats, inputValue  ]);\n       \n       // (sobre lo anterior) PARA QUE NO SE GUARDE EL ATRIBUTO ANTEIOR\n       // setCategories(cats => [ inputValue  ]);\n\n       // Para que se quede vacío\n       setInputValue('');\n        }\n    }\n\n\nreturn (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type='text'\n                placeholder={inputValue}\n                // value={inputValue}\n                onChange={ handleInputChange }\n            />   \n        </form> \n\n    )\n}\n\nexport default AddCategory; ","\n\nconst getGifs = async( category ) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=kuzu5kFLVLVHz8m655RVPp15MsVda9rr`\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n     return gifs;\n    }\n\nexport default getGifs;","import React from 'react'\n\nconst GifGridItem = ( {img, keyy} ) => {\n\n    console.log( keyy, img );\n    \n    return (\n        // CLASSNAME QUE PERMITE HACER EFECTOS ANIMADOS\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={img.url} alt={img.title} />\n            <p>{img.title}</p>\n        </div>\n    )\n}\n\n\n\nexport default GifGridItem;\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem  from './GifGridItem'\n// import getGifs from '../helpers/getGifs'\n\nconst GifGrid = ({ category }) => {\n\n    // Custom Hook creado por nosotros. Desestructurado.\n    const { data:images, loading} =  useFetchGifs( category ); \n\n    \n    /*\n    const [ count, setCount ] = useState(0);\n    const [title, setTitle] = useState([])    \n    \n    const [images, setImages] = useState([])\n    \n    // Si cambia category se volvería renderizar todo.\n    */\n\n\nreturn (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\n            { loading && <p className='animate__animated animate__flash'>Loading...</p>}\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            keyy={ img.id } \n                            img={ img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import React, {useState, useEffect} from 'react'\nimport getGifs from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\nconst [state, setState] = useState({\n    data: [],\n    loading: true\n});    \n\n// Se dispara el hook useState cada vez que cambie la categoria\n\nuseEffect(() => {\n    getGifs(category)\n        .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n        })\n}, [ category ])\n\n// setTimeout( () => {\n//     setState({\n//     data: [1,2,3,4,5],\n//     loading: false\n//     }) \n// }, 3000)\n\n\n    return state; \n\n}\n","import React, {useState} from 'react'\nimport  AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\n\n\n const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['' ])\n    \n    // const handleAdd = () => {\n    //     setCategories([...categories, \"Olympus Pen F\"]) \n    // }\n    \n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />))\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp  from './GifExpertApp.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}